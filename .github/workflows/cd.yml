name: CD - Deploy Docker no Amazon ECR

on:
  push:
    branches:
      - main
jobs:
  deploy:
    name: Buildar e enviar imagem para o ECR
    runs-on: ubuntu-latest

    steps:
    - name: Checkout do reposit√≥rio
      uses: actions/checkout@v4

    - name: Configurar AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login no ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build da imagem Docker
      run: |
        docker build -t fcg-payments .

    - name: Tag para o ECR
      run: |
        # docker tag fcg-payments:latest ${{ secrets.ECR_REPOSITORY }}:latest
        docker tag fcg-payments:latest ${{ secrets.ECR_REPOSITORY }}:latest
    - name: Push no ECR
      run: |
        docker push ${{ secrets.ECR_REPOSITORY }}:latest

    - name: Configurar o kubectl
      uses: aws-actions/eks-setup-kubectl@v4
      with:
        version: '1.30'

    - name: Obter credenciais do cluster EKS
      run: |
        aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.EKS_CLUSTER_NAME }}

    - name: Criar ou atualizar secrets no Kubernetes
      run: |
        kubectl create secret generic fcg-ms-payments-secret \
          --from-literal=Stripe__PublishableKey="${{ secrets.STRIPE_PUBLISHABLE_KEY }}" \
          --from-literal=Stripe__SecretKey="${{ secrets.STRIPE_SECRET_KEY }}" \
          --dry-run=client -o yaml | kubectl apply -f -

    - name: Aplicar Deployment no EKS
      run: |
        kubectl set image deployment/fcg-ms-payments fcg-ms-payments=${{ secrets.ECR_REPOSITORY_PAYMENTS }}:latest --namespace default
        kubectl rollout status deployment/fcg-ms-payments --namespace default
